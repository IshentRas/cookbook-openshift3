{
    "apiVersion": "v1", 
    "kind": "Policy", 
    "predicates": [
<% if @ose_major_version.split('.').last.to_i.between?(1,2) %>
        {
            "name": "PodFitsHostPorts"
        }, 
        {
            "name": "PodFitsResources"
        }, 
<%- end -%>
        {
            "name": "NoDiskConflict"
        }, 
<% if @ose_major_version.split('.').last.to_i != 1 %>
        {
            "name": "NoVolumeZoneConflict"
        }, 
<%- end -%>
<% if @ose_major_version.split('.').last.to_i.between?(1,2) %>
        {
            "name": "MatchNodeSelector"
        }, 
<%- end -%>
<% if @ose_major_version.split('.').last.to_i != 1 %>
        {
            "name": "MaxEBSVolumeCount"
        }, 
        {
            "name": "MaxGCEPDVolumeCount"
        }, 
<%- end -%>
<% if ! @ose_major_version.split('.').last.to_i.between?(1,2) %>
        {
            "name": "GeneralPredicates"
        }, 
        {
            "name": "PodToleratesNodeTaints"
        }, 
        {
            "name": "CheckNodeMemoryPressure"
        }, 
<%- end -%>
<% if ! @ose_major_version.split('.').last.to_i.between?(1,3) %>
        {
            "name": "CheckNodeDiskPressure"
        }, 
        {
            "name": "MatchInterPodAffinity"
        }, 
<%- end -%>
        {
            "argument": {
                "serviceAffinity": {
                    "labels": [
                        "region"
                    ]
                }
            }, 
            "name": "Region"
        }
    ], 
    "priorities": [
        {
            "name": "LeastRequestedPriority", 
            "weight": 1
        }, 
        {
            "name": "BalancedResourceAllocation", 
            "weight": 1
        }, 
        {
            "name": "SelectorSpreadPriority", 
            "weight": 1
        }, 
<% if @ose_major_version.split('.').last.to_i == 4 %>
        {
            "name": "NodePreferAvoidPodsPriority", 
            "weight": 10000
        }, 
<%- end -%>
<% if @ose_major_version.split('.').last.to_i != 1 %>
        {
            "name": "NodeAffinityPriority", 
            "weight": 1
        }, 
<%- end -%>
<% if ! @ose_major_version.split('.').last.to_i.between?(1,2) %>
        {
            "name": "TaintTolerationPriority", 
            "weight": 1
        }, 
<%- end -%>
<% if ! @ose_major_version.split('.').last.to_i.between?(1,3) %>
        {
            "name": "InterPodAffinityPriority", 
            "weight": 1
        }, 
<%- end -%>
        {
            "argument": {
                "serviceAntiAffinity": {
                    "label": "zone"
                }
            }, 
            "name": "Zone", 
            "weight": 2
        }
    ]
}
