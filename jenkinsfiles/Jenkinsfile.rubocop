#!groovy


try {
  properties([parameters([
    string(name: 'BRANCH_NAME',                                  defaultValue: env.BRANCH_NAME,                                description: 'Branch to build'),
    string(name: 'builddir',                                     defaultValue: 'cookbook-openshift3-test-' + env.BUILD_NUMBER, description: 'Build directory'),
    string(name: 'OSE_VERSIONS',                                 defaultValue: '3.7',                                          description: 'OSE versions to build, separated by spaces'),
    string(name: 'CHEF_IPTABLES_COOKBOOK_VERSION',               defaultValue: 'latest',                                       description: 'IPtables cookbook version, eg 1.0.0'),
    string(name: 'CHEF_SELINUX_COOKBOOK_VERSION',                defaultValue: 'latest',                                       description: 'SELinux cookbook version, eg 0.7.2'),
    string(name: 'CHEF_YUM_COOKBOOK_VERSION',                    defaultValue: 'latest',                                       description: 'yum cookbook version, eg 3.6.1'),
    string(name: 'CHEF_COMPAT_RESOURCE_COOKBOOK_VERSION',        defaultValue: 'latest',                                       description: 'compat_resource cookbook version'),
    string(name: 'CHEF_INJECT_COMPAT_RESOURCE_COOKBOOK_VERSION', defaultValue: 'false',                                        description: 'Whether to inject compat_resource cookbook version (eg true for some envs)'),
    string(name: 'CHEF_DEPLOY_METHODS',                          defaultValue: 'solo',                                         description: 'Which deployment methods to use (server and/or solo)'),
    string(name: 'CHEF_DEPLOY_CONTAINERIZED',                    defaultValue: '',                                             description: 'If "true", deploy containerized, "true false" for both'),
    string(name: 'LOG_LEVEL',                                    defaultValue: 'debug',                                        description: 'shutit log level (debug, info, warning, critical)'),
    string(name: 'SHUTIT_CLUSTER_CONFIGS',                       defaultValue: 'test_multi_node_colocated_etcd',               description: 'which cluster configs to test'),
    string(name: 'CHEFDK_RUBOCOP_VERSION',                       defaultValue: '1.6.1',                                        description: 'ChefDK docker image version for rubocop')
  ])])
  node {
    stage('setupenv') {
      sh 'mkdir -p ' + builddir
      dir(builddir) {
        ////when in source...
        checkout([$class: 'GitSCM', branches: [[name: '*/' + env.BRANCH_NAME]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'SubmoduleOption', disableSubmodules: false, parentCredentials: false, recursiveSubmodules: true, reference: '', trackingSubmodules: false]], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/IshentRas/cookbook-openshift3']]])
      }
    }
    stage('rubocop') {
      dir(builddir) {
        sh 'docker run -t --rm --volume "$PWD:/app" --workdir /app chef/chefdk:' + "${params.CHEFDK_RUBOCOP_VERSION} rubocop -D"
        sh 'docker run -t --rm --volume "$PWD:/app" --workdir /app chef/chefdk:' + "${params.CHEFDK_RUBOCOP_VERSION} foodcritic ."
      }
    }
    mail bcc: '', body: '''Rubocop passed''', cc: '', from: 'cookbook-openshift3-rubocop@jenkins.meirionconsulting.com', replyTo: '', subject: 'Rubocop OK', to: 'ian.miell@gmail.com, william17.burton@gmail.com, julien.perville@perfect-memory.com'
  }
} catch(err) {
  mail bcc: '', body: '''See: https://jenkins.meirionconsulting.com/

''' + err, cc: '', from: 'cookbook-openshift3-rubocop@jenkins.meirionconsulting.com', replyTo: '', subject: 'Rubocop Build Failure', to: 'ian.miell@gmail.com, william17.burton@gmail.com'
  throw(err)
}
